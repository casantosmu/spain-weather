{
  "openapi": "3.0.0",
  "info": {
    "title": "spain-weather",
    "description": "This API provides a comprehensive historical weather data for Spanish cities, provinces, and the country as a whole. The API also includes tools for filtering and searching for specific information, making it easy to find relevant data.",
    "version": "1.0.1",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "/v1"
    }
  ],
  "tags": [
    {
      "name": "location",
      "description": "Endpoints related to municipalities, provinces and autonomous cities."
    }
  ],
  "paths": {
    "/locations": {
      "get": {
        "tags": ["location"],
        "summary": "Get all locations",
        "description": "Retrieves a list of municipalities, provinces and autonomous cities in Spain.",
        "operationId": "getLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the location to filter the results by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Municipality"
                          },
                          {
                            "$ref": "#/components/schemas/Province"
                          },
                          {
                            "$ref": "#/components/schemas/AutonomousCity"
                          }
                        ]
                      }
                    }
                  },
                  "required": ["metadata", "data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "latLng": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "minItems": 2
          },
          "entity": {
            "type": "string"
          }
        },
        "required": ["id", "code", "name", "latLng", "entity"],
        "discriminator": {
          "propertyName": "entity"
        }
      },
      "Municipality": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Location"
          },
          {
            "type": "object",
            "properties": {
              "province": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["id", "code", "name"]
              }
            },
            "required": ["province"]
          }
        ]
      },
      "Province": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Location"
          },
          {
            "type": "object",
            "properties": {
              "capital": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["id", "code", "name"]
              }
            },
            "required": ["capital"]
          }
        ]
      },
      "AutonomousCity": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Location"
          }
        ]
      },
      "ListMetadata": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": ["skip", "limit", "total"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["name", "message"]
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "description": "Maximum number of items to include in the API response",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1000,
          "default": 25
        }
      },
      "skip": {
        "name": "skip",
        "description": "How many items should be skipped before starting to include items in the response",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      }
    },
    "responses": {
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "The request was malformed or invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
