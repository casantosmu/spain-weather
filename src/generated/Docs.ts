/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/locations": {
    /**
     * Get all locations
     * @description Retrieves a list of all locations in Spain.
     */
    get: operations["getLocations"];
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
    Location: {
      /** Format: uuid */
      id: string;
      code: string;
      name: string;
      latLng: [number, number];
      entity: string;
    };
    City: {
      entity: "City";
    } & Omit<components["schemas"]["Location"], "entity"> & {
        province: {
          /** Format: uuid */
          id: string;
          code: string;
          name: string;
        };
      };
    Province: {
      entity: "Province";
    } & Omit<components["schemas"]["Location"], "entity"> & {
        capital: {
          /** Format: uuid */
          id: string;
          code: string;
          name: string;
        };
      };
    AutonomousCity: {
      entity: "AutonomousCity";
    } & Omit<components["schemas"]["Location"], "entity">;
    ListMetadata: {
      /** Format: int32 */
      skip: number;
      /** Format: int32 */
      limit: number;
    };
    Error: {
      name: string;
      message: string;
    };
  };
  responses: {
    /** @description Internal server error */
    InternalServerError: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description The request was malformed or invalid */
    BadRequestError: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
  parameters: {
    /** @description Maximum number of items to include in the API response */
    limit?: number;
    /** @description How many items should be skipped before starting to include items in the response */
    skip?: number;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type external = Record<string, never>;

export type operations = {
  /**
   * Get all locations
   * @description Retrieves a list of all locations in Spain.
   */
  getLocations: {
    parameters: {
      query: {
        limit?: components["parameters"]["limit"];
        skip?: components["parameters"]["skip"];
        /** @description Name of the location to filter the results by */
        name?: string;
      };
    };
    responses: {
      /** @description List of all locations */
      200: {
        content: {
          "application/json": {
            metadata: components["schemas"]["ListMetadata"];
            data: (
              | components["schemas"]["City"]
              | components["schemas"]["Province"]
              | components["schemas"]["AutonomousCity"]
            )[];
          };
        };
      };
      400: components["responses"]["BadRequestError"];
      500: components["responses"]["InternalServerError"];
    };
  };
};
